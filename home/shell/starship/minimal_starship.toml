add_newline = true

# format = '''$directory$git_branch$git_commit$git_state$git_status$jobs$nix_shell$python${custom.venv}$conda$nodejs$direnv$docker${custom.subshell_indicator}$cmd_duration
# $character'''

# format = '''$directory$git_branch$git_commit$git_state$git_metrics$git_status$jobs$nix_shell$python$conda$nodejs$direnv$docker$cmd_duration
# $character'''

format = '''$directory${custom.git_indicator_l}$git_branch$git_commit$git_state$git_metrics$git_status${custom.git_indicator_r}$jobs$nix_shell$python$conda$nodejs$direnv$docker$cmd_duration
$character'''

# right_format = '$time'

[character]
success_symbol = '[‚ùØ](bold green)'
error_symbol = '[‚ùØ](bold red)'
# success_symbol = 'üò∏'
# error_symbol = 'üòø'

[shell]
disabled = false
format = '$indicator'
fish_indicator = 'üêü '
bash_indicator = '[BASH](bright-white) '
zsh_indicator = '[ZSH](bright-white) '

[username]
disabled = false
show_always = true
format =  '[$user]($style)'
style_user = 'bold #01c8ff'
style_root = 'bold #ff007a'

[hostname]
format = '[@](bold fg:#f10e2af)[${hostname}]($style) '
disabled = false
style = 'bold #ff007a'
ssh_only = false

[git_branch]
disabled = false
only_attached = true
format = '[$symbol$branch]($style) '
symbol = 'ÓÇ† '
style = 'bold bright-yellow bold'

[git_status]
disabled = false
format = '([$all_status$ahead_behind](bold fg:#53dbbd))'
style = 'bold bright-green bold'
conflicted = '='
ahead = '‚á°'
diverged = '‚áï'
untracked = '?'
up_to_date = ''
stashed = '$'
modified = '!'
staged = '+'
renamed = '¬ª'
deleted = '‚úò'
typechanged = ''

[git_commit]
disabled = false
only_detached = true
format = '[Ô∞ñ$hash]($style) '
style = 'bold bright-yellow bold'

[git_metrics]
disabled = true
added_style = 'bold blue'
format = '[+$added]($added_style)/[-$deleted]($deleted_style) '

[git_state]
disabled = false
style = 'bold bright-purple bold'

[custom.git_indicator_l]
disabled = false
when = true
style = 'bold fg:#7bff77'
require_repo = true
symbol = 'Ôíµ'
format = '[\[]($style)'

[custom.git_indicator_r]
disabled = false
when = true
style = 'bold fg:#7bff77'
require_repo = true
symbol = 'Ôíµ'
format = '[\]]($style) '

[directory]
disabled = false
format = '[$read_only]($read_only_style)[$path]($style) '
style = 'bold fg:#76aeff'
use_os_path_sep = true
read_only = 'üîí '
truncation_length = 0
truncate_to_repo = false

[cmd_duration]
disabled = false
min_time = 1000
format = '[$duration]($style) '
style = 'bright-blue'

[time]
disabled = false
use_12hr = true
format = '[$time]($style) üïô'
style = '#01ffc3'

[jobs]
disabled = false
style = 'bright-green bold'

# bash/zsh
# [custom.venv]
# description = "Show qualified virtualenv dir, if not IN the dir tree where it is resides"
# # from directory ../project-name/, . ~/some/other/.venv/bin/activate -- displays 'other/.venv'
# # from directory .../other/src, .../other, etc. , -- displays just .venv
# command = """
#     qual=$(basename $(dirname "$VIRTUAL_ENV"));
#     venv=$(basename "$VIRTUAL_ENV");
#     pat=".*/${qual}/*(/.*)?$";
#     [[ "$PWD" =~ $pat ]] && printf "($venv)]" || printf "($qual/$venv)]"
#     """
# when = '''[[ -n "$VIRTUAL_ENV" ]]'''
# format = '[$output](yellow bold) '

[custom.venv]
description = "Show qualified virtualenv dir, if not IN the dir tree where it resides"
# from directory ../project-name/, . ~/some/other/.venv/bin/activate -- displays 'other/.venv'
# from directory .../other/src, .../other, etc. -- displays just .venv
command = """
    set qual (basename (dirname $VIRTUAL_ENV))
    set venv (basename $VIRTUAL_ENV)
    set pat '.*/$qual/*(/.*)?$'
    if string match -r $pat $PWD
        printf "($venv)]"
    else
        printf "($qual/$venv)]"
    end
"""
when = '[ -n "$VIRTUAL_ENV" ]'
style = 'yellow bold'
format = '[$output]($style) '

# [python]
# disabled = false
# symbol = 'Û∞å†'
# format = '[\[${symbol}]($style) '
# style = 'yellow bold'

[python]
disabled = false
symbol = 'Û∞å† '
format = '[\[${symbol}${virtualenv}\]]($style) '
style = 'yellow bold'

[conda]
disabled = false
symbol = 'üêç '
format = '[\[${symbol}\(${environment}\)\]]($style) '
style = 'bold fg:#82bff2'

[nodejs]
disabled = false
symbol = 'Óúò '
format = '[\[${symbol}\(${environment}\)\]]($style) '
style = 'bold fg:#35eb98'

[direnv]
disabled = false
symbol = 'Ôäô '
format = '[\[${symbol}\(${loaded}/${allowed}\)\]]($style) '
style = 'bold fg:#35eb98'

[docker_context]
disabled = false
symbol = 'üê≥'
format = '[\[${symbol} \(${context}\)\]]($style) '
style = 'bold fg:#347beb'

[nix_shell]
disabled = false
impure_msg = '[impure shell](bold red)'
pure_msg = '[pure shell](bold green)'
unknown_msg = '[unknown shell](bold yellow)'
style = 'bold fg:#7bfdff'
symbol = '‚ùÑÔ∏è'
format = '[\[$symbol $state (\($name\))\]]($style) '

# bash/zsh
# [custom.subshell_indicator]
# command = 'echo $((SHLVL - 5))'
# when = 'test $SHLVL -gt 5'
# style = 'bold fg:#7bff77'
# symbol = 'Ôíµ'
# format = '[\[${symbol} \(${output}\)\]]($style) '

[custom.subshell_indicator]
command = 'math $SHLVL - 5'
when = 'test $SHLVL -gt 5'
style = 'bold fg:#7bff77'
symbol = 'Ôíµ'
format = '[\[${symbol} \(${output}\)\]]($style) '
